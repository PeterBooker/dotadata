// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package tmpls

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 9, 19, 12, 38, 51, 67216700, time.UTC),
		},
		"/_footer.html": &vfsgen۰CompressedFileInfo{
			name:             "_footer.html",
			modTime:          time.Date(2018, 9, 18, 20, 55, 8, 205930000, time.UTC),
			uncompressedSize: 627,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x50\xb1\x8e\xd4\x30\x14\xac\x93\xaf\x78\x72\x73\xd5\xd9\x70\x15\x3a\x1c\x17\x1c\x25\x48\x54\xf4\x2f\xf1\x4b\xd6\x7b\x8e\x9f\xb1\xdf\x66\x59\x45\xf9\x77\xb4\x1b\xad\x74\x42\xa2\xe0\x2a\xeb\xcd\x8c\x67\x34\xb3\xae\x9e\xc6\x90\x08\xd4\xc8\x2c\x54\xd4\xb6\xb5\x6d\x63\xf7\x03\x86\x88\xb5\x76\xaa\x9f\x1e\x63\x98\x0e\x02\x42\xbf\xe5\x71\x3e\x09\x79\xe5\xda\xa6\xb1\x3e\x2c\x77\xcd\xc0\x49\x30\x24\x2a\x37\xa6\xb1\xf9\x4e\xdc\xfe\x0c\x94\xae\xe6\xee\x3b\x7a\x82\xfe\x02\x16\xe1\x50\x68\xec\xd4\x41\x24\xd7\x67\x63\xce\xe7\xb3\xce\x24\x54\x7a\xe6\x57\x2a\x7a\xe0\x59\x81\x04\x89\xd4\xa9\x1f\x57\x1c\xbe\xdc\x08\xe5\xde\x5e\xd6\xa0\x83\xa7\x0f\x1f\x3f\x69\xf8\xca\x82\xf0\x04\xa1\x02\x42\xa1\x29\x54\xa1\x42\x1e\xa4\xa0\xa7\x19\xcb\x2b\xf0\x08\x3f\x31\x2e\x04\x2f\x5c\x32\x17\x94\xc0\x49\x5b\x93\x6f\x45\x8c\x0f\x8b\x6b\x1b\x6b\xf6\xe2\xae\x6d\xda\xc6\xd6\xa1\x84\x2c\x20\x97\x4c\x7b\x0d\x73\xc4\x05\x77\x54\x41\x2d\x43\xa7\x0c\xd6\x4a\x52\xcd\xb1\x9a\xe3\xaf\x13\x95\x8b\xae\x31\xcc\x7a\x0e\x49\x1f\xab\x72\xd6\xec\x6a\xf7\xdf\x6e\x3d\xb3\x54\x29\x98\x75\x7f\x4a\x3e\xd2\x7b\x2d\xef\xfb\x7a\x16\xfc\x7b\xe0\x7b\x9c\x30\x47\x09\xb9\x1a\xef\xaf\x8f\x8e\x28\x54\xe5\x1f\x69\x6e\xc1\x02\xde\xbf\x70\x1a\xc3\x04\x1d\xac\xdf\x30\x4d\xcf\xf0\x40\xe9\x61\xfb\xfc\x46\x7e\x1d\xb3\x67\x7f\x71\x6d\x6b\xcd\x41\xe6\xe8\xda\x75\xa5\xe4\xb7\xed\x4f\x00\x00\x00\xff\xff\xed\x64\xed\x70\x73\x02\x00\x00"),
		},
		"/_head.html": &vfsgen۰CompressedFileInfo{
			name:             "_head.html",
			modTime:          time.Date(2018, 9, 18, 20, 54, 47, 237112400, time.UTC),
			uncompressedSize: 663,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4d\x6e\xdb\x40\x0c\x85\xd7\xf2\x29\x08\xae\x23\x09\xed\xaa\x30\x3c\x41\x51\x04\xed\x05\xda\x75\xc0\x8c\xe8\x88\xf0\x0c\x29\xcc\x30\x76\x0d\xc3\x77\x2f\xfc\xd3\x44\x31\xda\x2c\xb4\x20\x35\xdf\x7b\xe4\xe3\xe1\x30\xf0\x5a\x94\x01\x47\xa6\x01\x8f\xc7\xc5\x02\x00\xa0\x69\x56\x2e\x9e\xf8\xfe\xc1\x9c\xe0\x33\x3c\x90\xd3\xaa\xbf\xb4\x16\x4d\xd3\x9c\xbe\x55\x66\x27\x88\x23\x95\xca\x1e\xf0\xd7\xcf\xef\xed\x17\xbc\x7f\xfb\xa3\x94\x39\xe0\x56\x78\x37\x59\x71\x84\x68\xea\xac\x1e\x70\x27\x83\x8f\x61\xe0\xad\x44\x6e\xcf\xc5\x1d\x88\x8a\x0b\xa5\xb6\x46\x4a\x1c\x3e\xdd\x41\x1d\x8b\xe8\xa6\x75\x6b\xd7\xe2\x41\xed\xa2\x7c\x75\x4e\xa2\x1b\x28\x9c\x02\x46\x52\x53\x89\x94\x10\xc6\xc2\xeb\x80\xa3\xfb\x54\x97\x7d\x3f\x98\x53\x37\xb1\x73\x79\x32\xdb\x70\xe9\xa2\x65\x84\x7e\x36\xdf\x54\x6c\xe2\xe2\xfb\x80\xf6\xbc\x4c\x76\x32\x9e\x0d\xc9\xfa\xf8\xe3\xdb\x07\x80\xef\xa7\xf9\xf3\x1d\x3f\x55\x71\xfe\x0b\xdc\xa6\xe0\x3b\x71\xe7\xb2\x8c\x54\x86\x19\x55\x5f\x72\xa6\xb2\x7f\x6f\xf3\x9e\xb8\xa8\xbe\x12\x5f\xcf\x2b\x3d\x5e\x76\xfa\x9f\xdb\x33\x2b\x17\x72\x2b\x33\x70\x76\xc8\x57\xbb\xb7\x18\xab\xef\x13\xd7\x91\xd9\x11\xae\x41\xf6\x54\x2b\x7b\xed\x63\xad\x7d\x26\xd1\x2e\x8b\x76\xb1\x56\x84\xd3\xea\x01\x9d\x7f\x7b\x7f\xae\x33\x0f\x42\x01\x29\xa5\x7f\x29\x8f\x56\x3c\xbe\x38\x48\x34\xc5\x1b\xed\x35\x6d\x4f\xed\x4e\xe2\xf5\xbe\x8b\xc3\x81\x75\x38\x1e\xff\x04\x00\x00\xff\xff\x60\x2d\x28\xc5\x97\x02\x00\x00"),
		},
		"/_header.html": &vfsgen۰FileInfo{
			name:    "_header.html",
			modTime: time.Date(2018, 9, 1, 14, 2, 9, 577960200, time.UTC),
			content: []byte("\x7b\x7b\x64\x65\x66\x69\x6e\x65\x20\x22\x68\x65\x61\x64\x65\x72\x22\x7d\x7d\x3c\x21\x44\x4f\x43\x54\x59\x50\x45\x20\x68\x74\x6d\x6c\x3e\x0a\x3c\x68\x74\x6d\x6c\x3e\x0a\x0a\x09\x3c\x68\x65\x61\x64\x3e\x0a\x09\x09\x7b\x7b\x20\x74\x65\x6d\x70\x6c\x61\x74\x65\x20\x22\x68\x65\x61\x64\x22\x20\x2e\x20\x7d\x7d\x0a\x09\x3c\x2f\x68\x65\x61\x64\x3e\x0a\x0a\x09\x3c\x62\x6f\x64\x79\x3e\x0a\x7b\x7b\x65\x6e\x64\x7d\x7d"),
		},
		"/_menu.html": &vfsgen۰CompressedFileInfo{
			name:             "_menu.html",
			modTime:          time.Date(2018, 9, 19, 12, 39, 37, 313810500, time.UTC),
			uncompressedSize: 1095,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xc1\x8e\x9b\x30\x10\x3d\x3b\x5f\x61\xb9\x97\xf6\xe0\xe5\x07\x0c\x97\xe6\xd0\x53\xb5\x52\xfb\x03\x03\x1e\xd8\xd1\x9a\x31\x35\x06\x6d\x84\xf8\xf7\xca\x71\x20\xcb\x4a\x39\x74\x7b\x8a\x35\x7e\x6f\xfc\xde\x9b\x09\xcb\x62\xb1\x25\x46\xa9\x7a\xe4\x49\xad\xeb\xe9\x24\x84\x79\x41\xb0\x18\x64\xe3\x60\x1c\x4b\x55\x77\xda\x42\x78\x55\xd5\x49\x08\x61\x2c\xcd\xdb\x45\xe3\x39\x02\x31\x06\xdd\xba\x89\xac\xaa\x12\x59\x08\xc3\xb0\x43\x18\xe6\x1a\x82\xcc\x3f\x1a\xdf\x06\x60\xab\x5d\xb7\x15\x52\x5f\x79\xe8\x2f\x84\x81\x23\x59\xd7\x01\xd8\x2a\xf9\x12\xb0\x2d\x55\xa1\xaa\xb3\x8f\x70\x86\x08\xa6\x80\x8d\x52\x4f\x31\x7a\xfe\xc0\x8b\xbe\xeb\x1c\x06\x25\xe3\x65\xc0\x52\x65\x8c\x92\x16\x22\xdc\xee\x92\x05\xe7\x60\x18\x71\x2b\x43\xe8\x30\x96\xea\x4b\x6e\xf1\x6b\x1a\x06\x1f\x22\xda\xef\x9e\x23\x72\x54\x12\x02\x81\x4e\xbe\x83\x77\xfb\x4b\x0f\x60\xd9\x2d\xda\x52\xb5\xe0\xd2\x13\xd7\xaa\x83\x1a\x5d\xa9\x7e\x5f\x05\xa4\x1c\xa8\x83\x48\x9e\x37\xfb\xc2\x8c\x03\x3c\xb0\xa2\xa9\x49\x40\x53\x24\xc8\xe6\xbd\xc8\xc6\x36\xba\x94\xb7\xfa\x61\x50\xd9\xe5\x16\xfb\xdd\x35\xd9\x87\x26\x76\x3d\x93\xfb\xa0\x26\xcd\xb7\x0f\x1a\xa6\xe8\x77\x94\x30\x8e\xde\xc1\x34\x45\xec\x97\x45\x52\x2b\xf1\x8f\x7c\x7a\x86\x0e\x9f\x7e\x42\x8f\x52\x11\x5b\x7c\x53\x72\x5d\x25\x34\x91\x66\x5c\x16\x64\xbb\xae\xf7\x46\xc7\x05\xd0\x8e\xf8\xf5\xdd\xf0\x7f\xf8\x1e\xe5\x21\xa2\x31\x68\xcf\xee\xa2\xaa\xaf\xcd\x14\x02\x72\xfc\x76\xcb\xe7\xbe\x1f\x29\x25\x47\xff\x2c\xd5\xfa\x66\xfc\xac\xd2\x2b\xb7\x3a\xfb\x66\xfc\x6f\x19\x43\xa0\x19\x9a\xcb\x67\x95\x6c\xf4\xea\x39\x1f\x1e\xe9\x31\xc5\xe4\xf6\x9d\xb2\x34\xe7\xb3\x29\x18\xe6\xfc\xc7\xde\xab\xa6\xc8\x1f\x88\xea\x74\xba\x29\xf9\x1b\x00\x00\xff\xff\x17\xb3\x1d\x64\x47\x04\x00\x00"),
		},
		"/docs.html": &vfsgen۰CompressedFileInfo{
			name:             "docs.html",
			modTime:          time.Date(2018, 9, 2, 15, 5, 22, 753573700, time.UTC),
			uncompressedSize: 4068,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\x1b\x37\x13\x3e\xcb\xbf\x62\xb0\x01\x82\xf7\x05\xbc\xda\xc4\x39\x35\x59\x0b\x30\x60\xb4\x35\xd0\x02\x46\xd3\xb4\xe8\x71\x44\xce\xee\x12\xe5\x72\x36\xe4\x50\xae\x20\xe8\xbf\x17\xdc\x0f\x7d\xa4\x72\x00\x5b\x3e\xe4\x90\x93\x48\xce\xcc\x33\x0f\x39\xab\x87\xc3\xcd\x46\x53\x65\x1c\x41\xa6\x59\x85\x7b\xac\x29\xdb\x6e\x37\x1b\x10\x6a\x3b\x8b\x42\x90\x35\x84\x9a\x7c\x06\x73\xd8\x6e\x2f\x66\x17\xb3\xd9\x91\xb5\x25\x17\x47\xdb\xc5\x6c\x56\xb6\x68\x1c\x78\xb6\x74\x9d\xa5\x61\xb6\x48\xab\xb3\x52\x9b\x15\x28\x8b\x21\x5c\x67\x9e\x1f\xb2\x45\x5a\x3c\x5a\x55\x6c\xf3\xb7\x57\x90\x7e\x5a\x9d\xbf\xeb\x07\xb6\xce\xaf\x46\xd7\x59\xe9\x70\xe7\x1b\x8c\xa6\x25\x7a\x58\xd6\xb9\x35\x75\x23\x93\xcf\x00\x68\xf4\xe0\x91\x0f\xcc\xc6\x18\x6b\x82\xe4\xb5\xe7\xd8\xc1\x7e\x98\x57\x36\x86\x66\xe4\xd8\x03\x84\x0e\xdd\x14\x22\x46\x2c\x65\x8b\x9f\xc8\x91\x47\x5b\x16\xc9\xb6\xd8\x79\x22\x34\x9e\xaa\xeb\xec\x55\x4d\x22\xc6\xd5\x79\x10\xf4\x42\xfa\x44\xc6\xdc\x08\xb5\xf0\xc5\x3c\x47\x25\x86\x5d\xc2\xef\xe3\xe1\xe3\x10\x5f\x16\x78\x22\x49\x8b\x2e\xa2\x7d\x32\xf6\xaf\x7d\xd8\x69\xc8\x07\xf6\xba\xf3\x14\xc2\x93\x51\xff\x64\xaf\xef\x53\x64\x0f\xfc\xb5\xb3\xbb\xb9\xbf\x7b\xf4\xdc\x70\x69\xac\x11\x43\x4f\xcf\x7f\x33\x45\x9e\xde\xd8\x00\xbc\x7e\x26\xec\xfa\x34\x68\x43\x9e\x9f\x41\xf5\xe7\x3e\xec\x71\xc8\x67\x01\x9e\x86\x4b\x6e\x4f\x27\x78\x97\xa2\x1e\x07\x7c\x16\xde\xe1\x67\x51\x16\xda\xac\xa6\xff\x70\xe1\x70\x1c\x1f\x2c\x3f\xae\x02\x3f\x4c\x2a\xf0\xf6\xcd\x4e\x06\x02\xf5\x89\xa6\x80\xa4\x59\xb9\x62\x27\xe4\x24\x03\x8d\x82\x79\xe8\xd6\xd7\x59\x50\x9e\xad\x1d\x57\x04\x7d\x4d\x72\x9d\xbd\x3a\x90\x85\xde\xc0\x55\x15\x92\xe1\xcd\x5e\x02\xca\xe6\xaa\x57\x90\x7a\xf8\xd7\x67\x8b\x5b\x56\xb1\x25\x27\x98\xd2\x96\x45\x73\xb5\x13\x9b\x6e\xf1\x7b\x63\x02\xe8\x43\x07\xa8\xcd\x8a\x02\xac\x39\x42\xcb\x9e\xc0\xb8\x8a\x7d\x3b\x98\x70\xc9\x51\x40\x1a\x82\x15\x7a\xc3\x31\x00\x77\xc9\x10\xa0\x62\x0f\x31\x24\x11\xb8\x65\x41\xb8\x82\x5b\x14\x04\x76\x09\xc7\xc3\x03\x2d\x83\x11\x9a\x97\x45\x77\x40\xd3\x4f\x47\x50\x11\x4a\xf4\x24\x42\xb9\x36\x2b\x93\xa4\xfa\xc0\xed\xdd\xb8\x9b\x63\x8d\xfa\xaf\xe8\x34\xef\x0e\xf6\x75\xcb\x8e\x14\x44\x6b\xb1\x55\xec\x3b\xf2\xe0\xd2\x04\x1c\x3b\x68\x49\x62\x00\x8c\x4a\xd8\x43\xe5\x8d\xab\x8d\xb5\x38\x87\x3f\x28\x88\x59\x46\x1b\x5b\x30\x1a\xac\xa9\xa3\x45\xe8\xd8\x0b\x42\x45\xd6\x04\xa0\x68\x42\xcb\x1a\x02\xb5\x1d\xf9\x39\xdc\x7b\xa4\x40\x4e\x40\x71\xdb\xb2\x66\x50\xd1\x87\x18\xa0\xc5\xda\xe1\x25\xac\xc8\x42\x50\x64\xc9\x9b\xf0\x39\x12\x38\x13\x2c\x28\x76\xe9\x03\x20\x89\x7e\x0e\x3f\xc6\xa0\x08\x34\x76\x66\x19\xc3\x25\x08\x59\x9b\x98\xa9\x09\x68\xc4\x1d\xce\x6d\xda\x9b\xa7\x45\xa9\x58\xd3\xe2\xb5\x95\x0f\xdd\xeb\x5a\x3e\x7c\xc4\xb6\xb3\x04\x42\xff\x08\x34\xe4\x69\x3e\x9f\x27\x5b\xd1\x1b\x77\x5e\x37\x4e\x03\x3a\x96\x86\x3c\xd8\x74\x5d\x72\x05\xe1\x6b\x91\x65\xd1\xa7\x29\x8b\x94\xf2\x99\x65\x1b\x55\x7f\x94\x71\xf8\x14\xe8\x7b\xa1\xbe\xc9\x42\xed\xef\xd2\xfd\xe5\x08\xf7\x36\xd6\xc6\x7d\xaf\xd8\x37\x56\xb1\x41\xdf\xb1\x33\x63\x7b\x72\xa4\xe8\x7f\x71\x04\x85\x0e\x50\xa9\x54\xc2\x74\x4b\x80\x36\x9e\x94\xd8\x35\x54\x9e\xdb\x5e\xbf\x6f\xee\xef\x2e\xe1\xc1\x48\xd3\xcf\x2a\xb6\x96\x1f\x92\x9a\x92\xd3\x1d\x1b\x27\x61\x0e\x37\xd6\xee\xa7\xd0\xe0\x8a\x00\x21\x49\xbc\x25\xf8\xdf\xa0\xfb\x68\xff\x0f\x9f\x23\xf9\x35\x74\xe8\xb1\x25\x21\xff\x1e\x86\x13\xb4\xe8\xea\x71\x97\x97\xf0\xd0\x18\xd5\x00\xa6\x24\xc3\xcd\x22\x0c\x63\xcf\x9e\xd2\x27\xdf\x88\xf5\x59\xf7\xc3\xbe\x17\x3b\x6c\xae\x8e\x3e\xdc\x4f\xbf\xfd\x32\xb1\x6b\x44\xba\xf0\xbe\x28\x34\x0b\xce\xbb\xc4\x7b\xc9\xfc\x37\xf9\xb9\xe2\xb6\xc0\xce\x14\xab\xb7\xc5\x0e\xb1\xd8\x57\xeb\x3c\x76\xeb\x83\x0e\xed\x7c\x66\xeb\x62\xe3\xb0\xa5\xed\x0b\xd0\x1b\x5b\xc3\x5d\xaf\x77\x0e\xb9\x01\xeb\x85\x48\xbd\x1c\xa5\x97\x3b\xac\xa1\x4b\x9d\xda\xce\x73\x78\xf5\x48\x2f\xc4\x68\xea\x5b\xcf\xe5\x73\xf6\x39\x95\xc5\xd8\xe0\x7e\xd9\x26\xef\x47\xe9\x95\x5d\xa4\xb7\x75\x9a\x5d\x1c\x3f\xc6\x2b\x66\xd9\x3f\xd5\x67\x17\x9b\x0d\x39\xbd\xdd\xfe\x1b\x00\x00\xff\xff\xb5\xcf\x35\x16\xe4\x0f\x00\x00"),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2018, 9, 18, 21, 9, 13, 441510500, time.UTC),
			uncompressedSize: 3970,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x57\x4d\x6f\xdc\x36\x13\x3e\xcb\xbf\x62\xc0\x1c\xde\x8b\x77\x85\xec\xdb\xa0\x40\x2a\x2b\x48\xe2\x06\x71\xd3\xb4\x06\x9c\x0f\xf4\x64\x70\xc5\x91\xc4\x2e\x45\x0a\xe4\x68\x65\xc5\xf0\x7f\x2f\xc8\x95\xb4\xde\x0f\xc7\xf2\xa1\x68\xd1\x93\x34\x9a\x0f\x8a\xcf\x3c\x1c\xce\xdc\xde\x0a\xcc\xa5\x46\x60\x52\x0b\xbc\xb9\xe4\x05\xb2\xbb\xbb\xdb\x5b\x20\xac\x6a\xc5\x09\x81\x95\xc8\x05\x5a\x06\x73\xb8\xbb\x3b\x89\x4e\xa2\x68\x47\x5b\xa1\x6e\x7a\xdd\x49\x14\x25\x15\x97\x1a\xac\x51\x78\xc6\xfc\x2b\x4b\xfd\xd7\x28\x71\x98\x91\x34\x1a\x32\xc5\x9d\x3b\x63\x7f\x36\xd5\xd2\x90\x35\x1a\x08\x6f\x68\x96\xa1\x26\xb4\x2c\xf5\xa6\x51\x22\xe4\x7a\xb0\xcb\x8c\x26\x2e\xf5\xa8\x8b\x92\xf2\xf9\x41\x8c\x99\xff\x41\xa9\x0b\x96\x9e\x1b\xe2\xe7\x9c\x78\x12\x97\xcf\x07\x87\x7a\xb0\x57\xc8\x05\x4b\x7f\xe6\x4e\xaa\x0e\x84\x74\xb5\xe2\x1d\x78\x0f\x58\x80\xe0\xc4\xc1\x68\xe8\x4c\x63\xa1\xc5\xa5\x93\x84\xd0\x4a\x2a\x81\x8c\x51\x24\x6b\x07\x5c\x8b\x60\xe6\x4a\x44\x72\xf3\x24\xae\xc7\x15\xfa\x97\x28\xe1\x50\x5a\xcc\xcf\x58\x49\x54\xbb\x97\x71\x2c\x0c\xf1\x79\x8d\x84\x76\x69\xcc\x0a\xed\x3c\x33\x55\xcc\x9d\x43\x72\xf1\x10\x38\x16\xc2\x3f\xe6\x1e\x4d\x47\xf3\x6f\xb2\x66\xc3\x1f\x2f\x49\xc3\x92\xf4\xac\xb6\xb2\xe2\xb6\x83\xaa\x9b\x2d\xfc\x26\x5b\xad\x0c\x17\x49\xcc\x0f\x16\x7e\xf6\x88\xef\x57\x63\xc5\xa5\x45\xe7\xe0\x52\x35\x85\xd4\xc7\x62\xc4\xc2\x64\xee\x20\x8e\xc3\xcc\x68\xb1\x8d\xf4\x45\x62\x0b\xe7\x26\x73\xdb\x10\x23\x24\x49\x2c\xe4\x3a\xbc\x26\x71\x9f\xf8\xe3\x34\x28\x65\x51\x2a\x59\x94\xe4\x9e\xcc\x83\x7b\x4a\x6b\x5a\xc8\x91\x53\x63\x91\x8d\xbb\xd9\x71\x56\xb3\x4a\xcc\x7e\x1c\x95\x51\x52\x2e\x06\x65\xef\xb8\xe5\xd0\x1b\xe4\x0d\xc9\xbc\x51\xf0\xa9\xcf\x50\x12\x97\x8b\xad\xeb\x1e\x9f\xce\x7b\x22\x39\x6a\xb4\x96\xba\xd8\x12\xc6\x68\x50\x52\xaf\x1c\x90\x81\xdf\x6b\xd4\x9e\x6a\xa7\x81\x70\xcb\x26\xcf\xc1\x58\xc8\x1a\x47\xa6\xda\x58\xcd\xe1\x3d\x5a\x83\x0e\x94\x5c\x21\xec\x30\xe9\x65\x1c\xb7\x6d\x3b\xf7\x64\x5a\x04\x06\x95\x68\x4d\x2c\x2c\x2f\x8c\xbe\x5e\x69\x8f\x5f\xcc\xd2\xf3\x20\xc3\x87\x20\xfb\xa4\x9c\x4e\x89\x52\x19\xbd\xc2\xee\x7a\x25\x75\x11\xb3\xf4\x63\x90\xe0\x83\xd4\x85\x8f\x10\x38\x3f\x21\x88\x92\x46\xc7\x2c\xfd\x55\x9a\x40\xa8\x39\xbc\x5e\x4a\x25\x49\x4e\xdb\x0d\x0f\xc6\x5d\xbc\xf4\x38\xc4\x2c\x1c\xb2\x19\x75\x35\x9e\xb1\x5e\xd5\x7f\x93\x84\xd5\x19\x0b\x66\x2c\x7d\xe3\x1f\x53\xb6\x39\x84\xcf\x4c\xe3\xc9\x75\x5d\xa2\x92\x37\x8f\x2f\xb3\x63\xce\xd2\xb7\x1b\x11\xde\x7b\x71\x22\x36\xc3\xca\x54\x36\x5a\xa0\x2d\x8c\x70\xd7\xad\xe5\x54\x3e\xbe\xfa\x81\x0b\x4b\x3f\x8d\x9f\xfe\xe7\xe0\xab\xff\xb6\xc1\xfa\x82\xb0\x9a\x84\xb3\x8f\x1c\x2f\x39\x91\xc2\xeb\xbc\xb1\x5d\xcc\xd2\x37\x41\x82\x77\x8d\xed\xa6\x40\x19\x22\xb8\x5a\x5a\x49\xd7\x6b\x74\x0e\x55\xcc\xd2\xab\x20\xc3\x97\x20\x4f\x44\x26\x04\x12\x81\xbf\x2f\x3c\x75\xfd\x5b\xd8\xcd\xb6\xaa\xde\x2b\x22\xc7\x8f\xf3\x8b\x7b\xc7\x59\x56\x05\x38\xea\xfc\xa5\xb3\x34\x56\xa0\x7d\x09\xff\xaf\x6f\xc0\x19\x25\x05\x3c\x13\x42\xfc\xc4\xf6\xcf\xbb\xac\x78\x81\x20\xab\x62\x96\xab\x46\x0a\xa8\x6e\x66\xbc\x21\xc3\xc0\xd9\x6c\x5a\x01\x0f\x11\x5c\x30\x09\x99\xeb\x23\xbb\xd9\x50\x01\xe6\xb5\x2e\x18\x70\x45\x67\x6c\xb8\x98\xc6\x9a\xc2\x8e\x6f\x73\x23\x0c\x52\x69\xf7\xff\x5a\xc8\xb5\x14\xa1\x0a\x1e\x01\x66\x6a\x1d\x84\x00\x91\x7f\x5d\x4c\x2b\x89\x57\x43\x6d\x3b\x1f\xef\xbf\x49\x35\x71\xa9\x4c\xb6\x72\x60\xf2\xdd\xfb\x35\xe7\x6b\xd3\x58\x7f\xc3\x8e\x75\xe2\x74\xa8\x7e\xc6\x6e\x08\xfd\x24\x26\x6c\x37\xf4\xfc\x5f\x4b\x0a\x5e\xcb\x63\x7c\x18\x11\xfd\x27\x09\x31\x8d\x05\xbf\x21\x0a\xa8\x8c\x45\xa8\x4d\x8b\xf6\x15\x7c\x76\x08\x54\x22\xbc\xbe\xbc\xf8\x2e\x1d\xde\x21\x65\x65\xb0\x0c\x34\xe8\x4c\x03\xda\xc7\x6a\x5c\xb8\x2f\x37\x11\x36\xfd\x55\x4f\x9c\xd1\xb6\x2d\xd1\xe2\xa9\x7f\xe8\x60\x50\x9a\x36\xf8\xb7\x5c\xd3\x7f\xa3\x58\x3c\xc0\x8b\xd7\x97\x17\x47\x19\xb1\x43\x88\x09\x7c\xd8\xa7\x83\xcf\xa6\x92\x1a\xdd\x83\x84\x50\xc5\xec\x87\x1d\x42\xa4\x1f\xb9\x6e\xb8\xda\x4b\x71\x7a\xa1\x33\xd5\x88\x0d\x03\x7e\xb9\x8a\xdf\x5e\x5d\x41\x2e\x15\xba\x83\x36\xba\x0a\xee\xaa\x3b\x85\x42\xae\x7d\xc6\x7d\x02\xf3\x46\x29\xf0\x5d\x9d\x35\x2a\x64\x76\xd3\x0b\xc9\x6f\xfd\x6d\x78\x3f\xb9\x7f\x77\x5f\x7d\xbc\xa5\xfe\x1e\xa3\x0e\x31\x1a\x1b\xeb\x7d\x98\x3e\x07\x92\x8f\xea\x57\x70\xa1\x1d\x71\xa5\x02\x6e\x25\xd7\xa2\x83\xfd\xa6\xfc\x34\xe8\x90\x3b\x89\x8e\xa0\xf5\xe7\xc1\xec\x0c\x2c\x0b\x90\x3a\x37\xb6\xe2\xa1\x97\xde\xc3\xfb\x38\x72\x0f\x0e\x06\x7d\x27\x7f\x38\x0e\x3c\x6d\xff\x87\x35\xe0\x5e\xbd\xe8\xf3\xfc\x0a\xfe\x30\x0d\x64\x5c\x43\xb3\xad\x1c\xe1\xdf\x1d\xaa\xfc\x61\x7a\x98\x35\x5a\x68\x4b\x4e\x3b\x25\x60\x00\x44\xd2\x34\x04\xc2\x58\xf3\x8c\xd7\xf2\x11\x24\x76\x67\x9a\x63\x87\x2f\x7a\x68\xc4\x89\x22\x3f\x1d\x27\xb1\x1f\x7c\xbd\x74\xb2\x3b\x29\xe7\xc6\xd0\x76\x8e\x8e\x4e\x6e\x6f\x51\x8b\xbb\xbb\xbf\x02\x00\x00\xff\xff\x6c\xd0\xaf\xdf\x82\x0f\x00\x00"),
		},
		"/notfound.html": &vfsgen۰CompressedFileInfo{
			name:             "notfound.html",
			modTime:          time.Date(2018, 9, 1, 19, 44, 40, 407829000, time.UTC),
			uncompressedSize: 397,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4f\xc3\x30\x0c\x85\xcf\xe9\xaf\xb0\x72\x66\x2b\x93\x76\xcc\x7a\xe4\x08\xfc\x05\xd3\xb8\x6b\xa0\xb5\xab\xc4\xdd\x98\xa2\xfc\x77\x94\x69\x03\x4d\xdc\xec\x3c\xbf\xe8\xbd\x2f\x67\x4f\x43\x60\x02\xcb\xa2\x2f\xb2\xb2\x7f\xc7\x23\xd9\x52\x72\x06\xa5\x79\x99\x50\x09\xec\x48\xe8\x29\x5a\xd8\x42\x29\x8d\x69\x8c\x79\x50\x67\xe2\xf5\xa6\x35\xc6\xb8\x19\x03\x43\x94\x89\x0e\xb6\x8e\xb6\xab\xaf\xc6\x25\xea\x35\x08\x43\x3f\x61\x4a\x07\xfb\xb9\xce\x1f\xa2\x51\x18\x94\xbe\x75\xd3\x13\x2b\x45\xdb\xd5\x53\xe3\x7c\x38\xdd\xef\x7a\x61\xc5\xc0\xbf\x9a\x71\xe3\xee\xdf\x1f\x9b\x1a\x30\xf0\xd1\x76\xaf\xa2\x70\xad\x01\x1b\xd8\x3f\xef\x5d\x3b\xee\xee\xbe\xe5\x6e\x9b\x08\xbd\xed\xde\x64\x49\x4f\x10\x14\x70\x59\x08\x63\x82\x33\x41\x8f\xcc\xa2\x30\x04\xf6\x70\x1e\x51\xe1\x22\x2b\x60\x24\x98\x44\xbe\x02\x1f\x61\x90\x08\x49\x62\xbc\x6c\x5d\xbb\xdc\xc2\xb6\x3e\x9c\xae\xa3\x6b\x6f\x1d\xaf\x5b\x45\xd1\x56\x00\x75\x6b\x1e\x89\x0d\x22\xfa\xc7\xd3\x34\x39\x13\xfb\x52\x7e\x02\x00\x00\xff\xff\x07\x15\x35\x6f\x8d\x01\x00\x00"),
		},
		"/privacy.html": &vfsgen۰CompressedFileInfo{
			name:             "privacy.html",
			modTime:          time.Date(2018, 9, 19, 13, 8, 24, 706650400, time.UTC),
			uncompressedSize: 734,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xf6\x53\x10\x3a\x6d\x40\x53\xa3\x77\xd7\xc0\x80\x5e\x76\x19\xf2\x0a\x8c\xc4\xc4\x5c\x65\xd2\x90\xe8\x60\x85\xe1\x77\x1f\xe4\xc4\x6b\x3d\xb4\x3e\xd1\x12\x7f\xfd\x1f\x89\x7f\x9e\x03\x9d\x59\x08\xdc\x98\xf8\x8a\xfe\xed\x88\x17\x72\xcb\x32\xcf\x60\x34\x8c\x11\x8d\xc0\xf5\x84\x81\x92\x83\x47\x58\x96\xba\xaa\xab\x6a\x77\x3b\x90\x4c\xf7\xbb\xba\xaa\xda\x01\x59\x20\x69\xa4\x67\x57\x4a\xd7\xd5\x35\x7c\xf8\xda\x4c\xde\x58\x05\x7c\xc4\x9c\x9f\x37\x5b\x30\xfa\x63\x07\x4f\x62\x94\x5c\xb7\x53\xac\xaa\xc0\xd7\x4d\xe1\x55\x0c\x59\x3e\xed\x5b\x7b\xfb\xa7\xad\xf5\xf7\x34\x9c\xd4\x92\xca\xa1\x8c\xc0\x72\x71\xdd\xf1\xe6\xd7\x36\xfd\xd3\x17\xf2\x71\x53\x47\xc2\xe0\xba\x5f\x0a\x5e\xf5\x95\x29\x3f\x80\x28\x58\x42\xff\xca\x72\x79\x80\xf3\x14\x23\xdc\xf1\x1f\xdb\x66\xfc\x6f\xd0\xf7\xf7\xca\x13\x23\x26\x03\x3d\x83\xf5\x04\x2f\x6a\xf8\x82\x86\x90\x29\x5d\xd9\x13\x4c\x99\xf2\x66\x02\x28\xa1\xd1\xf4\xc1\xe7\x4d\xa7\x04\xdf\x50\xc2\xad\x9a\x32\xa5\xfc\x7d\x33\x06\xce\x90\x28\x8f\xe4\x8d\xc2\x8d\xe2\x0b\x88\x7f\xae\xab\x1b\x97\x45\x0b\x46\x18\xc8\x12\xfb\x0c\xa6\x30\xa8\xb0\x15\xeb\x9e\xa0\x27\x8c\xd6\x6f\xc4\x77\xd0\x03\xc8\x34\x9c\x28\x95\xe3\x1f\xc7\x9f\xe0\x31\xc6\x15\x78\x45\x50\xc9\x04\xc6\x43\x59\xd4\x69\x32\x10\xb5\x9e\xe5\x02\x89\x22\x5a\x29\x4c\x6f\xf0\x9f\x63\xb6\x4d\xe0\xeb\xfe\xb8\x6d\xee\x61\xe9\xea\xaa\x2a\xb9\x6b\x9b\x12\xa9\xf2\x57\xef\x33\x78\x56\xb5\xf7\x84\x56\xf5\x3c\x93\x84\x65\xf9\x1b\x00\x00\xff\xff\xe6\x63\x90\xac\xde\x02\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/_footer.html"].(os.FileInfo),
		fs["/_head.html"].(os.FileInfo),
		fs["/_header.html"].(os.FileInfo),
		fs["/_menu.html"].(os.FileInfo),
		fs["/docs.html"].(os.FileInfo),
		fs["/index.html"].(os.FileInfo),
		fs["/notfound.html"].(os.FileInfo),
		fs["/privacy.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
