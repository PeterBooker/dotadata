// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package tmpls

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2018, 9, 1, 18, 11, 37, 803644800, time.UTC),
		},
		"/_footer.html": &vfsgen۰CompressedFileInfo{
			name:             "_footer.html",
			modTime:          time.Date(2018, 9, 13, 19, 35, 0, 717451100, time.UTC),
			uncompressedSize: 612,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x50\x31\x6e\xdc\x30\x10\xac\xc5\x57\x2c\xd8\xb8\xb2\x98\xb8\x0a\x1c\x8a\x45\x9c\x32\x01\x52\xa5\x5f\x89\x2b\x1d\xcf\x14\xc9\x2c\xf7\x74\x39\x08\xfa\x7b\x70\x27\x1c\x60\x04\x48\x11\x97\x3b\x33\x3b\x83\x99\x75\xf5\x34\x86\x44\xa0\xc7\x9c\x85\x58\x6f\x9b\x52\x8d\xdd\x0f\x18\x22\xd6\xda\xe9\x7e\x7a\x8c\x61\x3a\x08\x08\xfd\x96\xc7\xf9\x24\xe4\xb5\x53\x4d\x63\x7d\x58\xee\x9a\x21\x27\xc1\x90\x88\x6f\x4c\x63\xcb\x9d\xb8\xfd\x0c\x94\xae\xe6\xee\x3b\x7a\x82\xfe\x02\x16\xe1\xc0\x34\x76\xfa\x20\x52\xea\xb3\x31\xe7\xf3\xb9\x2d\x24\xc4\x7d\xce\xaf\xc4\xed\x90\x67\x0d\x12\x24\x52\xa7\x7f\x5c\x71\xf8\x72\x23\xb4\x7b\x7b\x59\x83\x0e\x9e\x3e\x7c\xfc\xd4\xc2\xd7\x2c\x08\x4f\x10\x2a\x20\x30\x4d\xa1\x0a\x31\x79\x10\x46\x4f\x33\xf2\x2b\xe4\x11\x7e\x62\x5c\x08\x5e\x32\x97\xcc\x28\x21\xa7\xd6\x9a\x72\x2b\x62\x7c\x58\x9c\x6a\xac\xd9\x8b\x3b\xd5\xa8\xc6\xd6\x81\x43\x11\x90\x4b\xa1\xbd\x86\x39\xe2\x82\x3b\xaa\xa1\xf2\xd0\x69\x83\xb5\x92\x54\x73\xfc\x75\x22\xbe\xb4\x35\x86\xb9\x9d\x43\x6a\x8f\x55\x3b\x6b\x76\xa9\xfb\x3f\xab\x3e\x67\xa9\xc2\x58\xda\xfe\x94\x7c\xa4\xf7\xfa\xdd\x97\xf5\x59\xf0\xef\x69\xef\x59\x11\x85\xaa\x18\xef\x25\x94\xfa\x8f\x10\xb7\x20\x83\xf7\x2f\x39\x8d\x61\x82\x0e\xd6\x6f\x98\xa6\x67\x78\xa0\xf4\xb0\x7d\x7e\x23\xbf\xae\xd7\x67\x7f\x71\x4a\x59\x73\x90\x39\x3a\xb5\xae\x94\xfc\xb6\xfd\x09\x00\x00\xff\xff\xca\x08\x42\xbe\x64\x02\x00\x00"),
		},
		"/_head.html": &vfsgen۰CompressedFileInfo{
			name:             "_head.html",
			modTime:          time.Date(2018, 9, 5, 19, 0, 33, 191132400, time.UTC),
			uncompressedSize: 659,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4d\x6e\xdb\x40\x0c\x85\xd7\xf2\x29\x08\xae\x23\x09\xed\xaa\x30\x3c\x41\x51\x04\xed\x05\xda\x75\xc0\x8c\xe8\x88\xf0\x0c\x29\xcc\x30\x76\x0d\xc3\x77\x2f\xfc\xd3\x44\x31\xda\x2c\xb4\x20\x35\xdf\x7b\xe4\xe3\xe1\x30\xf0\x5a\x94\x01\x47\xa6\x01\x8f\xc7\xc5\x02\x00\xa0\x69\x56\x2e\x9e\xf8\xfe\xc1\x9c\xe0\x33\x3c\x90\xd3\xaa\xbf\xb4\x16\x4d\xd3\x9c\xbe\x55\x66\x27\x88\x23\x95\xca\x1e\xf0\xd7\xcf\xef\xed\x17\xbc\x7f\xfb\xa3\x94\x39\xe0\x56\x78\x37\x59\x71\x84\x68\xea\xac\x1e\x70\x27\x83\x8f\x61\xe0\xad\x44\x6e\xcf\xc5\x1d\x88\x8a\x0b\xa5\xb6\x46\x4a\x1c\x3e\xdd\x41\x1d\x8b\xe8\xa6\x75\x6b\xd7\xe2\x41\xed\xa2\x7c\x75\x4e\xa2\x1b\x28\x9c\x02\x46\x52\x53\x89\x94\x10\xc6\xc2\xeb\x80\xa3\xfb\x54\x97\x7d\x3f\x98\x53\x37\xb1\x73\x79\x32\xdb\x70\xe9\xa2\x65\x84\x7e\x36\xdf\x54\x6c\xe2\xe2\xfb\x80\xf6\xbc\x4c\x76\x32\x9e\x0d\xc9\xfa\xf8\xe3\xdb\x07\x80\xef\xa7\xf9\xf3\x1d\x3f\x55\x71\xfe\x0b\xdc\xa6\xe0\x3b\x71\xe7\xb2\x8c\x54\x86\x19\x55\x5f\x72\xa6\xb2\x7f\x6f\xf3\x9e\xb8\xa8\xbe\x12\x5f\xcf\x2b\x3d\x5e\x76\xfa\x9f\xdb\x33\x2b\x17\x72\x2b\x33\x70\x76\xc8\x57\xbb\xb7\x18\xab\xef\x13\xd7\x91\xd9\x11\xae\x41\xf6\x54\x2b\x7b\xed\x33\x89\x76\x59\xb4\x8b\xb5\x22\x9c\xd6\x0e\xe8\xfc\xdb\xfb\x73\x9d\x79\x10\x0a\x48\x29\xfd\x4b\x75\xb4\xe2\xf1\xc5\x41\xa2\x29\xde\xe8\xae\x69\x7b\x6a\x77\x12\xaf\xb7\x5d\x1c\x0e\xac\xc3\xf1\xf8\x27\x00\x00\xff\xff\x12\xb5\x1f\xdd\x93\x02\x00\x00"),
		},
		"/_header.html": &vfsgen۰FileInfo{
			name:    "_header.html",
			modTime: time.Date(2018, 9, 1, 14, 2, 9, 577960200, time.UTC),
			content: []byte("\x7b\x7b\x64\x65\x66\x69\x6e\x65\x20\x22\x68\x65\x61\x64\x65\x72\x22\x7d\x7d\x3c\x21\x44\x4f\x43\x54\x59\x50\x45\x20\x68\x74\x6d\x6c\x3e\x0a\x3c\x68\x74\x6d\x6c\x3e\x0a\x0a\x09\x3c\x68\x65\x61\x64\x3e\x0a\x09\x09\x7b\x7b\x20\x74\x65\x6d\x70\x6c\x61\x74\x65\x20\x22\x68\x65\x61\x64\x22\x20\x2e\x20\x7d\x7d\x0a\x09\x3c\x2f\x68\x65\x61\x64\x3e\x0a\x0a\x09\x3c\x62\x6f\x64\x79\x3e\x0a\x7b\x7b\x65\x6e\x64\x7d\x7d"),
		},
		"/_menu.html": &vfsgen۰CompressedFileInfo{
			name:             "_menu.html",
			modTime:          time.Date(2018, 9, 16, 10, 2, 34, 737414400, time.UTC),
			uncompressedSize: 951,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x41\x8e\x9c\x30\x10\x3c\x9b\x57\x58\x9d\x4b\x72\xf0\xf2\x01\xc3\x25\x73\xc8\x29\x8a\x94\x7c\xa0\xc1\x0d\x6b\xad\x69\x13\x63\xd0\xae\x10\x7f\x8f\x3c\x1e\x98\x65\xa5\x39\x64\x4f\xa0\x76\x55\xbb\xaa\xda\xbd\xae\x86\x3a\xcb\x24\x61\x20\x9e\x61\xdb\x8a\x42\x08\xfd\x4c\x68\x28\xc8\xd6\xe1\x34\x55\xd0\xf4\xca\x60\x78\x81\xba\x10\x42\x68\x63\x97\xfd\xa0\xf5\x1c\xd1\x32\x05\xd5\xb9\xd9\x1a\xa8\x13\x59\x08\xcd\x78\x40\x18\x97\x06\x83\xcc\x1f\x45\xaf\x23\xb2\x51\xae\xdf\x0b\xa9\xaf\x3c\xf5\x17\x42\xe3\x99\xac\x9a\x80\x6c\x40\x3e\x07\xea\x2a\x28\xa1\xbe\xf8\x88\x17\x8c\xa8\x4b\xdc\x29\xcd\x1c\xa3\xe7\x0f\xbc\xe8\xfb\xde\x51\x00\x19\xdf\x46\xaa\x20\x63\x40\x1a\x8c\x78\x3b\x4b\x16\x9c\xc3\x71\xa2\xbd\x8c\xa1\xa7\x58\xc1\x97\xdc\xe2\xf7\x3c\x8e\x3e\x44\x32\xdf\x3d\x47\xe2\x08\x12\x83\x45\x95\x7c\x07\xef\x8e\x9b\x1e\xc0\xb2\x5b\x32\x15\x74\xe8\xd2\x15\xd7\xaa\xc3\x86\x5c\x05\x7f\xae\x02\x52\x0e\xb6\xc7\x68\x3d\xef\xf6\x85\x9e\x46\x7c\x60\x45\xd9\x36\x01\x75\x99\x20\xbb\xf7\x32\x1b\xdb\xe9\x52\xde\xea\xa7\x41\x65\x97\x7b\xec\x77\xd7\xd6\x3c\x34\x71\xe8\x99\xdd\x07\x35\x69\xbe\x43\x50\x38\x47\x7f\xa0\x84\x76\xf6\x1d\x4c\xd9\x48\xc3\xba\x4a\xdb\x49\xfa\x2b\x9f\x7e\x61\x4f\x4f\x3f\x71\x20\x09\x96\x0d\xbd\x82\xdc\x36\x89\x6d\xb4\x0b\xad\x2b\xb1\xd9\xb6\x7b\xa3\xf3\x03\x50\xce\xf2\xcb\xbb\xe1\xff\xf0\x03\xc9\x53\x44\x53\x50\x9e\xdd\x1b\xd4\x5f\xdb\x39\x04\xe2\xf8\xed\x96\xcf\xfd\x7d\xa4\x94\x9c\xfd\x6f\xa9\xc6\xb7\xd3\x67\x95\x5e\xb9\xf5\xc5\xb7\xd3\x23\x19\xba\x9c\xdd\x31\x43\x63\x97\xfc\xaf\x4b\xc6\x25\x2f\xd2\x51\xd5\x65\x5e\xc8\xba\x28\x6e\x1a\xfe\x05\x00\x00\xff\xff\x25\xe9\xde\x6c\xb7\x03\x00\x00"),
		},
		"/docs.html": &vfsgen۰CompressedFileInfo{
			name:             "docs.html",
			modTime:          time.Date(2018, 9, 2, 15, 5, 22, 753573700, time.UTC),
			uncompressedSize: 4068,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\x1b\x37\x13\x3e\xcb\xbf\x62\xb0\x01\x82\xf7\x05\xbc\xda\xc4\x39\x35\x59\x0b\x30\x60\xb4\x35\xd0\x02\x46\xd3\xb4\xe8\x71\x44\xce\xee\x12\xe5\x72\x36\xe4\x50\xae\x20\xe8\xbf\x17\xdc\x0f\x7d\xa4\x72\x00\x5b\x3e\xe4\x90\x93\x48\xce\xcc\x33\x0f\x39\xab\x87\xc3\xcd\x46\x53\x65\x1c\x41\xa6\x59\x85\x7b\xac\x29\xdb\x6e\x37\x1b\x10\x6a\x3b\x8b\x42\x90\x35\x84\x9a\x7c\x06\x73\xd8\x6e\x2f\x66\x17\xb3\xd9\x91\xb5\x25\x17\x47\xdb\xc5\x6c\x56\xb6\x68\x1c\x78\xb6\x74\x9d\xa5\x61\xb6\x48\xab\xb3\x52\x9b\x15\x28\x8b\x21\x5c\x67\x9e\x1f\xb2\x45\x5a\x3c\x5a\x55\x6c\xf3\xb7\x57\x90\x7e\x5a\x9d\xbf\xeb\x07\xb6\xce\xaf\x46\xd7\x59\xe9\x70\xe7\x1b\x8c\xa6\x25\x7a\x58\xd6\xb9\x35\x75\x23\x93\xcf\x00\x68\xf4\xe0\x91\x0f\xcc\xc6\x18\x6b\x82\xe4\xb5\xe7\xd8\xc1\x7e\x98\x57\x36\x86\x66\xe4\xd8\x03\x84\x0e\xdd\x14\x22\x46\x2c\x65\x8b\x9f\xc8\x91\x47\x5b\x16\xc9\xb6\xd8\x79\x22\x34\x9e\xaa\xeb\xec\x55\x4d\x22\xc6\xd5\x79\x10\xf4\x42\xfa\x44\xc6\xdc\x08\xb5\xf0\xc5\x3c\x47\x25\x86\x5d\xc2\xef\xe3\xe1\xe3\x10\x5f\x16\x78\x22\x49\x8b\x2e\xa2\x7d\x32\xf6\xaf\x7d\xd8\x69\xc8\x07\xf6\xba\xf3\x14\xc2\x93\x51\xff\x64\xaf\xef\x53\x64\x0f\xfc\xb5\xb3\xbb\xb9\xbf\x7b\xf4\xdc\x70\x69\xac\x11\x43\x4f\xcf\x7f\x33\x45\x9e\xde\xd8\x00\xbc\x7e\x26\xec\xfa\x34\x68\x43\x9e\x9f\x41\xf5\xe7\x3e\xec\x71\xc8\x67\x01\x9e\x86\x4b\x6e\x4f\x27\x78\x97\xa2\x1e\x07\x7c\x16\xde\xe1\x67\x51\x16\xda\xac\xa6\xff\x70\xe1\x70\x1c\x1f\x2c\x3f\xae\x02\x3f\x4c\x2a\xf0\xf6\xcd\x4e\x06\x02\xf5\x89\xa6\x80\xa4\x59\xb9\x62\x27\xe4\x24\x03\x8d\x82\x79\xe8\xd6\xd7\x59\x50\x9e\xad\x1d\x57\x04\x7d\x4d\x72\x9d\xbd\x3a\x90\x85\xde\xc0\x55\x15\x92\xe1\xcd\x5e\x02\xca\xe6\xaa\x57\x90\x7a\xf8\xd7\x67\x8b\x5b\x56\xb1\x25\x27\x98\xd2\x96\x45\x73\xb5\x13\x9b\x6e\xf1\x7b\x63\x02\xe8\x43\x07\xa8\xcd\x8a\x02\xac\x39\x42\xcb\x9e\xc0\xb8\x8a\x7d\x3b\x98\x70\xc9\x51\x40\x1a\x82\x15\x7a\xc3\x31\x00\x77\xc9\x10\xa0\x62\x0f\x31\x24\x11\xb8\x65\x41\xb8\x82\x5b\x14\x04\x76\x09\xc7\xc3\x03\x2d\x83\x11\x9a\x97\x45\x77\x40\xd3\x4f\x47\x50\x11\x4a\xf4\x24\x42\xb9\x36\x2b\x93\xa4\xfa\xc0\xed\xdd\xb8\x9b\x63\x8d\xfa\xaf\xe8\x34\xef\x0e\xf6\x75\xcb\x8e\x14\x44\x6b\xb1\x55\xec\x3b\xf2\xe0\xd2\x04\x1c\x3b\x68\x49\x62\x00\x8c\x4a\xd8\x43\xe5\x8d\xab\x8d\xb5\x38\x87\x3f\x28\x88\x59\x46\x1b\x5b\x30\x1a\xac\xa9\xa3\x45\xe8\xd8\x0b\x42\x45\xd6\x04\xa0\x68\x42\xcb\x1a\x02\xb5\x1d\xf9\x39\xdc\x7b\xa4\x40\x4e\x40\x71\xdb\xb2\x66\x50\xd1\x87\x18\xa0\xc5\xda\xe1\x25\xac\xc8\x42\x50\x64\xc9\x9b\xf0\x39\x12\x38\x13\x2c\x28\x76\xe9\x03\x20\x89\x7e\x0e\x3f\xc6\xa0\x08\x34\x76\x66\x19\xc3\x25\x08\x59\x9b\x98\xa9\x09\x68\xc4\x1d\xce\x6d\xda\x9b\xa7\x45\xa9\x58\xd3\xe2\xb5\x95\x0f\xdd\xeb\x5a\x3e\x7c\xc4\xb6\xb3\x04\x42\xff\x08\x34\xe4\x69\x3e\x9f\x27\x5b\xd1\x1b\x77\x5e\x37\x4e\x03\x3a\x96\x86\x3c\xd8\x74\x5d\x72\x05\xe1\x6b\x91\x65\xd1\xa7\x29\x8b\x94\xf2\x99\x65\x1b\x55\x7f\x94\x71\xf8\x14\xe8\x7b\xa1\xbe\xc9\x42\xed\xef\xd2\xfd\xe5\x08\xf7\x36\xd6\xc6\x7d\xaf\xd8\x37\x56\xb1\x41\xdf\xb1\x33\x63\x7b\x72\xa4\xe8\x7f\x71\x04\x85\x0e\x50\xa9\x54\xc2\x74\x4b\x80\x36\x9e\x94\xd8\x35\x54\x9e\xdb\x5e\xbf\x6f\xee\xef\x2e\xe1\xc1\x48\xd3\xcf\x2a\xb6\x96\x1f\x92\x9a\x92\xd3\x1d\x1b\x27\x61\x0e\x37\xd6\xee\xa7\xd0\xe0\x8a\x00\x21\x49\xbc\x25\xf8\xdf\xa0\xfb\x68\xff\x0f\x9f\x23\xf9\x35\x74\xe8\xb1\x25\x21\xff\x1e\x86\x13\xb4\xe8\xea\x71\x97\x97\xf0\xd0\x18\xd5\x00\xa6\x24\xc3\xcd\x22\x0c\x63\xcf\x9e\xd2\x27\xdf\x88\xf5\x59\xf7\xc3\xbe\x17\x3b\x6c\xae\x8e\x3e\xdc\x4f\xbf\xfd\x32\xb1\x6b\x44\xba\xf0\xbe\x28\x34\x0b\xce\xbb\xc4\x7b\xc9\xfc\x37\xf9\xb9\xe2\xb6\xc0\xce\x14\xab\xb7\xc5\x0e\xb1\xd8\x57\xeb\x3c\x76\xeb\x83\x0e\xed\x7c\x66\xeb\x62\xe3\xb0\xa5\xed\x0b\xd0\x1b\x5b\xc3\x5d\xaf\x77\x0e\xb9\x01\xeb\x85\x48\xbd\x1c\xa5\x97\x3b\xac\xa1\x4b\x9d\xda\xce\x73\x78\xf5\x48\x2f\xc4\x68\xea\x5b\xcf\xe5\x73\xf6\x39\x95\xc5\xd8\xe0\x7e\xd9\x26\xef\x47\xe9\x95\x5d\xa4\xb7\x75\x9a\x5d\x1c\x3f\xc6\x2b\x66\xd9\x3f\xd5\x67\x17\x9b\x0d\x39\xbd\xdd\xfe\x1b\x00\x00\xff\xff\xb5\xcf\x35\x16\xe4\x0f\x00\x00"),
		},
		"/index.html": &vfsgen۰CompressedFileInfo{
			name:             "index.html",
			modTime:          time.Date(2018, 9, 16, 10, 2, 49, 417283700, time.UTC),
			uncompressedSize: 3841,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x57\xdf\x6f\xdb\x36\x10\x7e\x56\xfe\x8a\x83\xf6\xd0\x17\xdb\x4c\xbc\xb6\x03\x06\x45\x45\xdb\xb4\x6b\xd6\x75\x0b\x90\xfe\xc0\x9e\x02\x5a\x3c\x49\x37\x53\xa4\x40\x52\x56\xdc\xc0\xff\xfb\x40\xda\x92\x7f\xc4\x4d\x95\xed\x69\xd8\x93\x78\xe2\xf1\xc4\xfb\xf8\xdd\xa7\xe3\xdd\x9d\xc0\x9c\x14\x42\x4c\x4a\xe0\xed\x15\x2f\x30\x5e\xad\xee\xee\xc0\x61\x55\x4b\xee\x10\xe2\x12\xb9\x40\x13\xc3\x04\x56\xab\x93\xe8\x24\x8a\xf6\x66\x2b\x54\xcd\x66\xee\x24\x8a\x92\x8a\x93\x02\xa3\x25\x9e\xc7\x7e\x18\xa7\xfe\x6d\x94\x58\xcc\x1c\x69\x05\x99\xe4\xd6\x9e\xc7\x7f\x35\xd5\x4c\x3b\xa3\x15\x38\xbc\x75\xe3\x0c\x95\x43\x13\xa7\xde\x35\x4a\x04\x2d\x3a\xbf\x4c\x2b\xc7\x49\xf5\x73\x51\x52\x9e\xdd\x8b\x31\xf6\x1b\x24\x55\xc4\xe9\x85\x76\xfc\x82\x3b\x9e\xb0\xf2\xac\x5b\x50\x77\xfe\x12\xb9\x88\xd3\x37\xdc\x92\x5c\x82\x20\x5b\x4b\xbe\x04\xbf\x02\xa6\x20\xb8\xe3\xa0\x15\x2c\x75\x63\xa0\xc5\x99\x25\x87\xd0\x92\x2b\xc1\x69\x2d\x1d\xd5\x16\xb8\x12\x80\xd5\x0c\x85\x40\x11\xfc\x27\x09\xab\xfb\x8f\x6c\x06\x51\xc2\xa1\x34\x98\x9f\xc7\x8c\x5b\x8b\xce\xb2\x9a\x67\x73\x5e\x20\x3b\x9d\x9c\x4d\x4e\x99\xd0\x8e\x4f\xc3\xe2\xaf\x54\xc7\xdd\xce\x66\x4e\xc1\xcc\xa9\x71\x6d\xa8\xe2\x66\x09\xd5\x72\x3c\xf5\xc9\xb4\x4a\x6a\x2e\x12\xc6\xef\x45\x2f\x9d\xab\xed\xcf\x8c\xb5\xda\x88\xda\xa0\xb5\x13\x6d\x0a\x56\xcb\xa6\x20\x65\xd7\x5f\x61\xdf\x09\xff\x45\x1b\x71\xe5\x97\xc2\x55\x58\x76\xec\x33\x4c\xe8\xcc\xde\x8b\x63\x31\xd3\x4a\x6c\x23\x7d\x26\x6c\xe1\x42\x67\x76\x1b\xa2\x87\x26\x61\x82\x16\x61\x98\xb0\x0d\x07\x8e\x33\xa2\xa4\xa2\x94\x54\x94\xce\x3e\x9a\x12\x3b\x93\x46\xb7\xe0\xd9\x20\x49\xa1\x8d\xfb\x7c\xf6\x96\xcb\xb1\x2c\xc6\x4f\xfb\xc9\x28\x29\xa7\xe9\x07\xae\x1a\x2e\x13\x56\x4e\xb7\xaf\xeb\xf4\x52\x65\xb2\x11\x08\xae\x44\xf8\xf5\x9a\xbd\xbe\xbe\x86\x9c\x24\xda\x7b\x4c\xa9\xc2\x72\xb9\x1c\x41\x41\x0b\x52\x85\x9f\x85\xbc\x91\x12\xfc\x6e\x8d\x96\x81\x3d\x59\x63\x9d\xae\xe8\x2b\x9f\x91\x24\xb7\xdc\xe1\xcf\x20\xde\x3c\x44\x99\xe3\x6c\xe9\xb1\x1f\x84\x41\x4f\x88\x43\x18\x3e\x59\x9f\x52\x3f\xfd\x02\x2e\x95\x75\x5c\xca\x80\x4b\xc9\x95\x58\xc2\x21\x99\x46\x61\x0e\xb9\x25\xb4\x0e\x5a\xbe\x04\xa7\xf7\x6a\x6e\x0a\xa4\x72\x6d\x2a\x1e\x38\x70\x80\xe7\x71\x64\xfe\x0d\xe7\x37\x24\xbd\xcf\xf4\xc7\x41\xf4\xf2\xea\xf2\x10\x9c\xdf\x11\x05\x54\xda\x60\x77\xd4\x2f\xe0\x4f\xdd\x40\xc6\x15\x34\x76\x4d\x9d\x97\x57\x97\x21\x3d\x8b\x32\xff\x36\x43\xf4\x02\x0d\xb4\x25\x77\x81\x2b\xa5\x6e\x83\x4b\x87\x19\xb9\x61\x20\x85\x8a\xfd\x81\xd7\xf4\x1d\x24\xf6\xcb\x75\x0f\x87\xcd\xb8\xd3\x5b\xd3\x05\xca\x91\xbb\xc6\xe0\x58\xd0\x82\x44\x28\xbf\xe3\xf5\xb7\xf1\xfb\x66\xf5\x55\x62\xfc\xd3\x1e\xac\x87\x1f\xe8\xe5\xfc\x15\xf2\xc6\x51\xde\xc8\x4e\xa6\x3f\x6e\xc4\x78\x02\x89\xad\x79\xaf\x1d\x41\x30\xaa\xc6\xa1\x88\xd3\x4b\xf7\x44\x4a\x98\xc9\x35\x7e\x06\x2a\x52\x62\x92\x30\xef\x9e\x1e\x9c\xdd\xfe\x8f\xe1\x62\x83\xb4\x75\x8d\x52\xfe\x84\x7a\xe5\xd7\x0a\x24\xa9\xb9\xf5\x1c\xfe\xa3\x46\xe5\x37\x33\x0a\x5b\x9a\x35\x79\x0e\xda\x6c\x2a\x7b\xed\x35\x81\x77\x68\x34\x5a\x90\x34\x47\xd8\x63\xaf\x27\x6f\xdb\x4e\x02\x55\x27\x99\xae\x58\x89\x46\x33\x61\x78\xa1\xd5\xcd\x5c\x79\xf5\x63\x71\x7a\x11\x6c\x78\x1f\x6c\x7f\x46\xa3\x21\x51\x2a\xad\xe6\xb8\xbc\x99\x93\x2a\x58\x9c\x7e\x08\x16\xbc\x27\x55\xf8\x08\x81\x52\x03\x82\x48\xd2\x8a\xc5\xe9\x6f\xa4\x43\x91\x4c\xe0\x65\x90\x2a\x1a\x96\xcd\x46\xd7\xd8\xcc\xe3\xc0\xe2\xf4\x95\x7f\x0e\x49\xa0\x5b\x98\xe9\xc6\x8b\xfe\x4d\x89\x92\x6e\x59\x9c\xbe\x5e\xdb\xf0\xce\xdb\x03\xf3\xe8\x62\xb9\xb2\x51\x02\x4d\xa1\x85\xbd\x69\x0d\x77\x25\x8b\xd3\x8f\xfd\xbb\x27\x16\xbe\xf8\x97\xeb\x2c\x2f\x1d\x56\x83\x32\x24\x87\x15\x9b\x71\xe7\x24\xde\xe4\x8d\x59\xfa\x24\x83\x05\x6f\x1b\xb3\x1c\x92\x6a\x88\x60\x6b\x32\xe4\x6e\x16\x68\x2d\x4a\x16\xa7\xd7\xc1\x86\xcf\xc1\x1e\x98\x67\x08\x24\x02\x73\x9e\x79\xd2\xf8\x51\xc8\x66\x47\x16\x1e\x54\xb7\x4a\x8c\x9f\xed\x94\x21\x55\xc5\x61\x1d\x52\xc5\x0b\x04\xaa\x8a\x71\x2e\x1b\x12\x50\xdd\x8e\x79\xe3\x74\x0c\xd6\x64\xfd\xae\x16\xc4\x27\xb5\xe4\x19\x96\x5a\x0a\x34\x61\x6f\xcf\x9f\x9e\xde\xfe\xf8\xfc\x34\x06\x2e\xdd\x79\xfc\x0b\x2a\x34\x94\xc1\x8e\x17\x84\xd0\xf1\xf1\x7d\xee\xca\xcf\x10\xfd\xf9\x47\x02\x04\xda\x08\x34\x7e\x38\x1d\xa6\x45\x6f\x7c\xeb\x07\xbe\xb9\x04\x52\x4e\x43\xcd\x0b\x7c\x48\x87\xae\x11\x21\xd7\xa6\x17\xfe\x47\x69\xd0\x4c\xea\x6c\x6e\x41\xe7\xfb\x8d\x69\xce\x17\xba\x31\xbe\xe1\x58\x4b\xcc\x68\x5b\x9f\xa3\x0d\x89\xb5\x81\x4f\x8a\x9c\x7d\x14\x0d\xb6\x60\x9c\xfd\x7f\x19\x31\x8c\x06\xdb\xdf\x7d\xad\x5b\x34\x2f\xe0\xd3\xf6\x27\xff\x00\x1b\x5e\x97\x98\xcd\x2b\x1e\xfe\xda\xdf\xa7\xc1\x5b\x74\x59\x19\xa2\x86\xe3\xf7\x7d\x80\xf2\xdf\x6d\x42\x23\xd6\xb5\x14\x5e\x23\xba\xf6\xa0\xf7\x6d\x4b\x34\x38\xf2\x0f\xb5\xd7\x47\xb4\x5c\xb9\xff\xba\x34\xec\x8c\x8f\x5e\x2b\xa2\xc8\x5f\x4e\x13\xe6\xef\x9d\xde\x3a\xd9\xbf\xa8\xe6\x5a\xbb\xed\x35\x36\x3a\xb9\xbb\x43\x25\x56\xab\xbf\x03\x00\x00\xff\xff\x47\x15\x65\xd4\x01\x0f\x00\x00"),
		},
		"/notfound.html": &vfsgen۰CompressedFileInfo{
			name:             "notfound.html",
			modTime:          time.Date(2018, 9, 1, 19, 44, 40, 407829000, time.UTC),
			uncompressedSize: 397,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4f\xc3\x30\x0c\x85\xcf\xe9\xaf\xb0\x72\x66\x2b\x93\x76\xcc\x7a\xe4\x08\xfc\x05\xd3\xb8\x6b\xa0\xb5\xab\xc4\xdd\x98\xa2\xfc\x77\x94\x69\x03\x4d\xdc\xec\x3c\xbf\xe8\xbd\x2f\x67\x4f\x43\x60\x02\xcb\xa2\x2f\xb2\xb2\x7f\xc7\x23\xd9\x52\x72\x06\xa5\x79\x99\x50\x09\xec\x48\xe8\x29\x5a\xd8\x42\x29\x8d\x69\x8c\x79\x50\x67\xe2\xf5\xa6\x35\xc6\xb8\x19\x03\x43\x94\x89\x0e\xb6\x8e\xb6\xab\xaf\xc6\x25\xea\x35\x08\x43\x3f\x61\x4a\x07\xfb\xb9\xce\x1f\xa2\x51\x18\x94\xbe\x75\xd3\x13\x2b\x45\xdb\xd5\x53\xe3\x7c\x38\xdd\xef\x7a\x61\xc5\xc0\xbf\x9a\x71\xe3\xee\xdf\x1f\x9b\x1a\x30\xf0\xd1\x76\xaf\xa2\x70\xad\x01\x1b\xd8\x3f\xef\x5d\x3b\xee\xee\xbe\xe5\x6e\x9b\x08\xbd\xed\xde\x64\x49\x4f\x10\x14\x70\x59\x08\x63\x82\x33\x41\x8f\xcc\xa2\x30\x04\xf6\x70\x1e\x51\xe1\x22\x2b\x60\x24\x98\x44\xbe\x02\x1f\x61\x90\x08\x49\x62\xbc\x6c\x5d\xbb\xdc\xc2\xb6\x3e\x9c\xae\xa3\x6b\x6f\x1d\xaf\x5b\x45\xd1\x56\x00\x75\x6b\x1e\x89\x0d\x22\xfa\xc7\xd3\x34\x39\x13\xfb\x52\x7e\x02\x00\x00\xff\xff\x07\x15\x35\x6f\x8d\x01\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/_footer.html"].(os.FileInfo),
		fs["/_head.html"].(os.FileInfo),
		fs["/_header.html"].(os.FileInfo),
		fs["/_menu.html"].(os.FileInfo),
		fs["/docs.html"].(os.FileInfo),
		fs["/index.html"].(os.FileInfo),
		fs["/notfound.html"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
